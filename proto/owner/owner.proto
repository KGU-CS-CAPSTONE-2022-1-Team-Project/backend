syntax ='proto3';


option go_package ="/proto/owner";

service Owner{
  rpc Google(LoginRequest) returns(LoginResponse){};
  rpc GoogleCallBack(RegisterRequest) returns(RegisterResponse){};
  rpc SaveAddress(AddressRequest) returns(AddressResponse){};
  rpc GetChannel(ChannelRequest) returns(ChannelResponse){};
  rpc SetAnnoymousUser(NicknameRequest) returns(NicknameResponse){};
  rpc GetAnnoymousUser(NicknameRequest) returns(NicknameResponse){};
}

message NicknameRequest{
  string address=1;
  string nickname=2;
}

message NicknameResponse{
  OwnerStatus status=1;
  string nickname=2;
}

message LoginRequest{
  string ip=1;
}

message LoginResponse{
  string authUrl=1;
}

message RegisterRequest{
  string code=1;
}

message RegisterResponse{
  string accessToken=1;
}

message AddressRequest{
  string address=1;
  string accessToken=2;
}

message AddressResponse{
  bool isValidate=1;
}

message ChannelRequest{
  string id=1;
}

message ChannelResponse{
  OwnerStatus status=1;
  string title=2;
  string description=3;
  string image=4;
  string url=5;
  string address=6;
}

message OwnerStatus{
  uint32 code=1;
  string message=2;
}